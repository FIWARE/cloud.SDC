Scope

* Limitations

  *  The SDC operates over VMs that are identified by the ip and VDC to which they belong.
  
  * No assynchrony mechanism are implemented (note that operations could take many time) (<<working to fix it>>).

  * We provides basic calls (install, uninstall, configure, etc.) but no combinations of them.

  * AppConf implements its own  API, and isn't able to proccess standard formats like OVF or TCloud.

  * SDC-Server only provides a Rest-API (but no web view, etc.).

  * SDC does not store configuration actions made on attributes .
    Question: Are we interested on storing all the configuration actions
    performed on each node? or only the last action performed per attribute?

  * There is no mechanism to manage the transactions. It means, there is no way to
    J2EE and Chef run by its own (<<working to fix it>>).
  
  * [30.09.2011] The recipe version and the version corresponding to products and applications are not correlated.
    So far, the recipe version is not used, for instance, when sdc deletes a product release or an application release
    it deletes the whole recipe instead of deleting an specific recipe version 
  
  * [30.09.2011] The catalog Management should be tested again. So far it is better to perform the
    Catalog Management manually since it is not synchronized with the recipes.
  
  * [18.10.2011] Recipes and Installables should be managed as a product/application Release.
    However the recipes are handled in chef as product/applications this auses a problem
    when deleting a product/application release from the Catalog Management since this
    will delete the whole cookbook for the application/product.
    Solution: When deleting cookbooks it should be tested that the version 
    to be deleted is the last one of this product/application otherwise the recipe is not deleted
    [To be implemented]
    
  * [Sprint 17 26.10.2001] The fqn becomes the identifier of the VM to be aligned 
    with Claudia developments. The ip is always needed in order to communicate with 
    the different nodes (to find out the chef identifier of the node (hostname + domain)

* Risks

  * The requirements are captured form a limited number of examples so we can fail
  the rule making this implementation useless for another examples.

  * Due to inexperience in systems like Chef and the brief time in estimations, the
  plan could change a few.
