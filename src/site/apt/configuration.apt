System Configuration

  SDC Server is using <<commons-properties>> project it means, it provides persistent
  properties through data base. It also expose these properties through MBean.
  This feature give us the possibility to change the values in runtime instead of
  using java standard properties that only allow change its values offline.

* Properties

  The list bellow show the different properties the system is using and their meaning:

  *  <<uninstallProductRecipeTemplate>> = The template name used in uninstall
  prouctsrecipes. It will receive the product name and version (<<<{0}::{1}_uninstall>>>).

  *  <<installProductRecipeTemplate>> = The template name used in install
  proucts recipes. It will receive the product name and version (<<<{0}::{1}_install>>>).

  *  <<backupProductRecipeTemplate>> = The template name used in backup
  proucts recipes. It will receive the product name and version (<<<{0}::{1}_backup>>>).

  *  <<restoreProductRecipeTemplate>> = The template name used in restore
  proucts recipes. It will receive the product name and version (<<<{0}::{1}_restore>>>).


  *  <<uninstallAppRecipeTemplate>> = The template name used in uninstall applications. It will
  receive the application type (war, etc.), application name, version, and the products
  name (orderded) separated by <<productListSeparator>>  (<<<{1}::{2}_uninstall_{3}>>>).

  *  <<installAppRecipeTemplate>> = The template name used in install applications. It will
  receive the application type (war, etc.), application name, version, and the products
  name (orderded) separated by <<productListSeparator>>  (<<<{1}::{2}_install_{3}>>>).

  *  <<backupAppRecipeTemplate>> = The template name used in backup applications. It will
  receive the application type (war, etc.), application name, version, and the products
  name (orderded) separated by <<productListSeparator>>  (<<<{1}::{2}_backup_{3}>>>).

  *  <<restoreAppRecipeTemplate>> = The template name used in restore applications. It will
  receive the application type (war, etc.), application name, version, and the products
  name (orderded) separated by <<productListSeparator>>  (<<<{1}::{2}_restore_{3}>>>).

  *  <<productListTemplate>> = The product list item, parametrized by product name and version (<<<{0}-{1}>>>).

  *  <<productListSeparator>> = The product list separator (<<<->>>).

  *  <<chefClientId>> = The Chef's client username (<<<serch>>>).

  *  <<chefClientPass>> = The Chef's client private key file location (<<</opt/sdc/private.pem>>>).

  *  <<chefServerUrl>> = The Chef server URL (<<<http://109.231.82.12:4000>>>).

  *  <<chefServerNodesPath>> = The path to access to chef's nodes (<<</nodes/{0}>>>).

  *  <<chefDateFormat>> = The date format to send the Rest request to Chef (<<< yyyy-MM-dd'T'HH:mm:ss'Z'>>>).

  *  <<chefTimeZone>> = The time zone to send the Rest request to Chef (<<<GMT>>>).

  *  <<chefClientUrlTemplate>> = The template url where the sdc-client is
   (parametrized with client url) (<<< http://{0}:9990/sdc-client>>>).

